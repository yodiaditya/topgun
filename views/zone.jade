script(src='/javascripts/jQueryRotateCompressed.2.1.js')
script(src='/javascripts/jquery.hotkeys.js')
script(src='/javascripts/latlong.js')
    
script
  
  /**
   * Simple convert Lat,Long into x,y 
   * http://stackoverflow.com/questions/1019997/convert-lat-longs-to-x-y-co-ordinates 
   */  
  function convertMap(lat, lon){
      var y = ((-1 * lat) + 90) * (map_width / 180);
      var x = (lon + 180) * (map_height / 360);
      var result = {x:x,y:y};
      return result;
  }

  /** Converts numeric degrees to radians */
  if (typeof(Number.prototype.toRad) === "undefined") {
    Number.prototype.toRad = function() {
      return this * Math.PI / 180;
    }
  }

  $(document).ready(function(){
    
    now.core.on('disconnect', function() {
      now.clientDisconnect();
    });
  
    $(document).bind('keydown', 'left',function (e){
      now.userMovement(-5);
      e.preventDefault();
    });

    $(document).bind('keydown', 'right',function (e){
      now.userMovement(5);
      e.preventDefault();
    });

    now.updateUserDegree = function(degree){
      $('#userdegree').remove();
      $('#degrees').append('<div id="userdegree"> '+degree+' </div>');
    }
    
    now.userPosition = function(player, userList) {
      map_width = 300;
      map_height = 300;

      $('div.mapenemy').remove();
      $('div.distance-enemy').remove();
      $('div.mapplayer').remove();
      
      var userCoordinate = convertMap(player.latitude,player.longitude);
      var userX = userCoordinate.x-241; 
      var userY = userCoordinate.y-133;
      userX = userX*33;
      userY = userY*17;
      
      $('#mapbox').append( $('<div id="player-plane" class="mapplayer" style="margin-left:'+ userX +'px;margin-top:'+ userY+'px;"></div>'));
      $('#player-plane').rotate(player.degree);
      
      for(var keyVal in userList) {
        if( player.id !== userList[keyVal]['id'] ){

          var lat1 = player.latitude;
          var lat2 = userList[keyVal]['latitude'];
          var lon1 = player.longitude;
          var lon2 = userList[keyVal]['longitude'];
          
          var R = 6371; // km
          var dLat = (lat2-lat1).toRad();
          var dLon = (lon2-lon1).toRad();
          var lat1 = lat1.toRad();
          var lat2 = lat2.toRad();

          var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                  Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); 
          var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
          var d = R * c;

          var courses = computeCD(player.latitude, player.longitude, userList[keyVal].latitude, userList[keyVal].longitude);
          var enemyCoordinate = convertMap(userList[keyVal]['latitude'],userList[keyVal]['longitude']);
          var enemyX = enemyCoordinate.x-241; 
          var enemyY = enemyCoordinate.y-133;
          enemyX = enemyX*33;
          enemyY = enemyY*17;
          console.log(enemyX + ' , ' + enemyY);

          $('#mapbox').append( $('<div id="enemy-'+ keyVal+'" class="mapenemy" style="margin-left:'+ enemyX + 'px;margin-top:'+ enemyY +'px;"></div>'));
          $('#enemy-'+keyVal).rotate(userList[keyVal]['degree']);
          
          var getEnemy = keyVal+1;
          $('#enemyStatus').append('<div id="distance-enemy-'+ keyVal+'" class="distance-enemy">Enemy '+ getEnemy +' : ' + d +' km');
        };
      };

      $('#statusUser').empty().append(player['latitude'] + ',' + player['longitude']);
    };

    now.updateMissile = function(distance){
      $('#missile').empty().append(distance);
    };
    
    now.updateDistance = function(player, enemies){
      $('#distance').empty().append(player);
    };
   
    $('div#mapbox').click(function(){
      now.startGame();
    }); 
    
  });


.container
  .row
    .span7#planemap
      #mapbox-wrap      
        #mapbox
          .clearfix

    .span6
      #player
        #distance
        #degrees
          <b>Player Degree</b>
          #userdegree 
            p 0
        #statusUser 

      #enemyStatus
  .row

